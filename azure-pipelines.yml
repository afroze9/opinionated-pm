# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  system.debug: true 

steps:
- task: NuGetToolInstaller@1
  displayName: Install Nuget

# - task: DotNetCoreCLI@2
#   inputs:
#     command: custom
#     custom: tool
#     arguments: install --global dotnet-coverage
#   displayName: Install Coverage tool

- task: SonarCloudPrepare@1
  displayName: 'Prepare SonarCloud Analysis'
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'nexus-framework'
    scannerMode: 'MSBuild'
    projectKey: 'nexus-framework.nexus'
    projectName: 'Nexus'

- task: DotNetCoreCLI@2
  displayName: 'Restore Solution'
  inputs:
    command: 'restore'
    projects: $(solution)
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    command: 'build'
    projects: $(solution)
    arguments: '--configuration $(buildConfiguration) --no-restore'

# - script: dotnet-coverage collect "dotnet test --no-build --configuration $(buildConfiguration)" -f xml -o "coverage.xml"

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*UnitTests.csproj'
    arguments: '--collect "Code Coverage"'

# - task: DotNetCoreCLI@2
#   displayName: Test
#   inputs:
#     command: 'test'
#     projects: '**/*UnitTests.csproj'
#     arguments: '--no-build --configuration $(buildConfiguration) --results-directory "$(Build.SourcesDirectory)/reports" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true'
#     publishTestResults: false
#     workingDirectory: '$(Build.SourcesDirectory)'

# - script: reportgenerator -reports:$(Build.SourcesDirectory)/reports/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura""
#   displayName: Create reports

# - task: PublishCodeCoverageResults@2
#   inputs:
#     summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud Analysis'
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarCloudPublish@1
  displayName: 'Publish SonarCloud Results'
  inputs:
    pollingTimeoutSec: '300'
