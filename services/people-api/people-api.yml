trigger:
  branches:
    include:
      - master
  paths:
    include:
      - 'services/people-api/**'
      - 'Directory.Build.props'
      - 'Directory.Packages.props'
      - 'docker-compose.yml'
      - 'docker-compose-local.yml'
pr:
  paths:
    include:
      - 'services/people-api/**'

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  project: 'services/people-api/src/Nexus.People.Api/Nexus.People.Api.csproj'
  packagesFile: 'services/people-api/src/Nexus.People.Api/obj/project.assets.json'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore Solution'
  inputs:
    command: 'restore'
    projects: $(project)
    feedsToUse: 'select'

- task: SonarCloudPrepare@1
  displayName: 'Prepare SonarCloud Analysis'
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'nexus-framework'
    scannerMode: 'MSBuild'
    projectKey: 'nexus-framework.nexus.people'
    projectName: 'Nexus People API'
    extraProperties: |
      sonar.coverage.exclusions=**/*Migrations/*.cs

- task: DotNetCoreCLI@2
  displayName: 'Build People API'
  inputs:
    command: 'build'
    projects: $(project)
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud Analysis'
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarCloudPublish@1
  displayName: 'Publish SonarCloud Results'
  inputs:
    pollingTimeoutSec: '300'

- task: SnykSecurityScan@1
  displayName: 'Snyk Security Scan'
  inputs:
    serviceConnectionEndpoint: 'Snyk'
    testType: 'app'
    severityThreshold: 'high'
    monitorWhen: 'always'
    failOnIssues: true
    projectName: 'People API'
    organization: 'bd187a54-4038-4785-bd50-557c98a89868'
    additionalArguments: '--file=$(packagesFile)'