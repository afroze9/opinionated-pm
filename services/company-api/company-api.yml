trigger:
  branches:
    include:
      - master
  paths:
    include:
      - 'services/company-api/**'

pr:
  paths:
    include:
      - 'services/company-api/**'

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  project: 'services/company-api/src/Nexus.Company.Api/Nexus.Company.Api.csproj'
  testProject: 'services/company-api/tests/Nexus.Company.Api.UnitTests/Nexus.Company.Api.UnitTests.csproj'
  testSettings: 'services/company-api/tests/Nexus.Company.Api.UnitTests/.runsettings'
  coverletOutputPath: '$(Build.ArtifactStagingDirectory)/TestResults/Coverage/'

steps:
- task: NuGetToolInstaller@1
  displayName: Install Nuget

- task: SonarCloudPrepare@1
  displayName: 'Prepare SonarCloud Analysis'
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'nexus-framework'
    scannerMode: 'MSBuild'
    projectKey: 'nexus-framework.nexus.company'
    projectName: 'Nexus Company API'
    extraProperties: 'sonar.coverage.exclusions=**/*Migrations/*.cs'

- task: DotNetCoreCLI@2
  displayName: 'Restore Solution'
  inputs:
    command: 'restore'
    projects: $(project)
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  displayName: 'Build Company API'
  inputs:
    command: 'build'
    projects: $(project)
    arguments: '--configuration $(buildConfiguration) --no-restore'

# - script: dotnet test $(testProject) --configuration $(buildConfiguration) --collect:"XPlat Code Coverage" --results-directory $(coverletOutputPath) --logger trx
#   displayName: 'Run Tests with Code Coverage'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '$(testProject)'
    arguments: '--collect:"XPlat Code Coverage" --logger trx --results-directory $(coverletOutputPath)'
    publishTestResults: false

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/*.trx'
    searchFolder: '$(coverletOutputPath)'

- task: PublishCodeCoverageResults@2
  inputs:
    summaryFileLocation: '$(coverletOutputPath)/**/*.xml'

# - task: PublishCodeCoverageResults@1
#   displayName: 'Publish Code Coverage'
#   inputs:
#     codeCoverageTool: 'Cobertura'
#     summaryFileLocation: '$(coverletOutputPath)/**/*.xml'
#     reportDirectory: '$(coverletOutputPath)'
#     mergeTestResults: true


- task: SonarCloudAnalyze@1
  displayName: 'Run SonarCloud Analysis'
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- task: SonarCloudPublish@1
  displayName: 'Publish SonarCloud Results'
  inputs:
    pollingTimeoutSec: '300'
